include:
#  - template: Docker.gitlab-ci.yml
#  - template: Security/DAST.gitlab-ci.yml
#  - template: Security/SAST.gitlab-ci.yml
#  - template: Security/License-Scanning.gitlab-ci.yml
#  - template: Security/Dependency-Scanning.gitlab-ci.yml
#  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Security/Container-Scanning.gitlab-ci.yml

stages:
  - lint
  - build
  - test
#  - dast
  - deploy

psalm:
  stage: lint
  image: composer:2
  cache:
    - key: "composer"
      paths:
        - vendor/
    - key: "psalm"
      paths:
        - psalm_cache/
  before_script:
    - php --version
    - composer --version
    - composer install --no-interaction
    - vendor/bin/psalm --version
  script:
    - vendor/bin/psalm --stats --report=psalm.codeclimate.json || echo '==================== THERE ARE PROBLEMS IN THE CODE ===================='
    #- vendor/bin/psalm --stats --taint-analysis --report=psalm_taint.codeclimate.json || echo '==================== THERE ARE SECURITY PROBLEMS IN THE CODE ===================='
  coverage: '/^Psalm was able to infer types for \d+\.\d+% of the codebase$/'
  #allow_failure: false
  timeout: 2 minutes
  artifacts:
    paths:
      - psalm.codeclimate.json
      #- psalm_taint.codeclimate.json

# https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#make-docker-in-docker-builds-faster-with-docker-layer-caching
docker-build:
  stage: build
  image: docker:20
  services:
    - docker:dind
  variables:
    DOCKER_TAG: "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull "$DOCKER_TAG" || echo "NO CACHE FOR $DOCKER_TAG , BUILDING FROM SCRATCH"
  script:
    - docker build --target "prod" --cache-from "$DOCKER_TAG" --tag "$DOCKER_TAG" .
  after_script:
    - echo "Pushing $DOCKER_TAG"
    - docker image push "$DOCKER_TAG"
  rules:
    - exists:
      - Dockerfile

.lftp:
  stage: deploy
  when: manual
  image: minidocks/lftp
  before_script:
    - lftp --version
    - ls -l
    - echo "LFTP_FOLDER = $LFTP_FOLDER"
  script:
    - lftp -e "set ssl:verify-certificate no;
          ls;
          mirror -v --reverse --only-newer --ignore-time --exclude open-etymology-map.ini web/ www.dsantini.it/$LFTP_FOLDER;
          quit"
        -u "$FTP_USER,$FTP_PASS"
        "$FTP_HOST"

test:
  extends: .lftp
  environment:
    name: testing
    url: https://www.dsantini.it/etymology-test
  variables:
    LFTP_FOLDER: etymology-test
  only:
    variables:
      - $CI_COMMIT_REF_PROTECTED
    
prod:
  extends: .lftp
  environment:
    name: production
    url: https://www.dsantini.it/etymology
  variables:
    LFTP_FOLDER: etymology
  only:
    - main
    - tags

ip_test:
  stage: deploy
  when: manual
  image: curlimages/curl:7.78.0
  script:
    - echo $(curl 'https://api.ipify.org')
